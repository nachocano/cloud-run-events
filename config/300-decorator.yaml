# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
 name: decorators.messaging.cloud.google.com
 labels:
   events.cloud.google.com/release: devel
   events.cloud.google.com/crd-install: "true"
   messaging.knative.dev/subscribable: "true"
spec:
  group: messaging.cloud.google.com
  version: v1alpha1
  names:
    kind: Decorator
    plural: decorators
    singular: decorator
    categories:
    - all
    - knative
    - messaging
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Address
      type: string
      JSONPath: .status.address.url
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            extensions:
              type: object
              description: "Map of attributes that will be added to the event and forwarded."
            sink:
              type: object
              description: "Reference to an object that will resolve to a domain name to use as the sink."
        status:
          properties:
            sinkUri:
              type: string
            observedGeneration:
              type: integer
              format: int64
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    # we use a string in the stored object but a wrapper object
                    # at runtime.
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                  - type
                  - status
                type: object
              type: array
          type: object
