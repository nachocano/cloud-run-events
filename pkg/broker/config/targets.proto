/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package config;
option go_package="github.com/google/knative-gcp/pkg/broker/config";

// The state of the object.
// We may add additional intermediate states if needed.
enum State {
  UNKNOWN = 0;
  READY = 1;
}

// A pubsub "queue".
message Queue {
  string topic = 1;
  string subscription = 2;
  State state = 3;
}

// Represents a broker.
message Broker {
  // The id of the object. E.g. UID of the resource.
  string id = 1;

  // The name of the object.
  string name = 2;

  // The namespace of the object.
  string namespace = 3;

  // The broker address.
  // Will we have more than one address?
  string address = 4;

  // The decouple queue for the broker.
  Queue decouple_queue = 5;

  // All targets of the broker.
  map<string, Target> targets = 6;

  // The broker state.
  State state = 7;
}

// Target defines the config schema for a broker subscription target.
message Target {
  // The id of the object. E.g. UID of the resource.
  string id = 1;

  // The name of the object.
  string name = 2;

  // The namespace of the object.
  string namespace = 3;

  // The broker name that the trigger is referencing.
  string broker = 4;

  // The resolved subscriber URI of the target.
  string address = 5;

  // Optional filters from the trigger.
  map<string, string> filter_attributes = 6;

  // The retry queue for the target.
  Queue retry_queue = 7;

  // The target state.
  State state = 8;
}

// TargetsConfig is the collection of all Targets.
message TargetsConfig {
  // Keybed by broker namespace/name.
  map<string, Broker> brokers = 1;
}