/*
Copyright 2020 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/google/knative-gcp/pkg/apis/events/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CloudAuditLogsSourceLister helps list CloudAuditLogsSources.
type CloudAuditLogsSourceLister interface {
	// List lists all CloudAuditLogsSources in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLogsSource, err error)
	// CloudAuditLogsSources returns an object that can list and get CloudAuditLogsSources.
	CloudAuditLogsSources(namespace string) CloudAuditLogsSourceNamespaceLister
	CloudAuditLogsSourceListerExpansion
}

// cloudAuditLogsSourceLister implements the CloudAuditLogsSourceLister interface.
type cloudAuditLogsSourceLister struct {
	indexer cache.Indexer
}

// NewCloudAuditLogsSourceLister returns a new CloudAuditLogsSourceLister.
func NewCloudAuditLogsSourceLister(indexer cache.Indexer) CloudAuditLogsSourceLister {
	return &cloudAuditLogsSourceLister{indexer: indexer}
}

// List lists all CloudAuditLogsSources in the indexer.
func (s *cloudAuditLogsSourceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLogsSource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAuditLogsSource))
	})
	return ret, err
}

// CloudAuditLogsSources returns an object that can list and get CloudAuditLogsSources.
func (s *cloudAuditLogsSourceLister) CloudAuditLogsSources(namespace string) CloudAuditLogsSourceNamespaceLister {
	return cloudAuditLogsSourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CloudAuditLogsSourceNamespaceLister helps list and get CloudAuditLogsSources.
type CloudAuditLogsSourceNamespaceLister interface {
	// List lists all CloudAuditLogsSources in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLogsSource, err error)
	// Get retrieves the CloudAuditLogsSource from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CloudAuditLogsSource, error)
	CloudAuditLogsSourceNamespaceListerExpansion
}

// cloudAuditLogsSourceNamespaceLister implements the CloudAuditLogsSourceNamespaceLister
// interface.
type cloudAuditLogsSourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CloudAuditLogsSources in the indexer for a given namespace.
func (s cloudAuditLogsSourceNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CloudAuditLogsSource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CloudAuditLogsSource))
	})
	return ret, err
}

// Get retrieves the CloudAuditLogsSource from the indexer for a given namespace and name.
func (s cloudAuditLogsSourceNamespaceLister) Get(name string) (*v1alpha1.CloudAuditLogsSource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cloudauditlogssource"), name)
	}
	return obj.(*v1alpha1.CloudAuditLogsSource), nil
}
